<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="departments-test-suite.xml" />
	<munit:test name="departments-test-suite-department-postFlowTest" doc:id="4dc7d5c4-5516-4bf2-845b-c52f37db92c6" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="8ed69039-da42-4aee-b42e-1cb9fb5b21e9" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8f311506-996a-4a84-8ae4-3a6442b64604" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://departments/afterPost.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="a7c3b8ef-ce7c-4a45-a4c1-65b65e9a4300" >
				<munit:payload value="#[readUrl('classpath://departments/post-body.dwl')]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to department-postFlow" doc:id="cb00d6d3-c6ac-4842-9e41-c7a9f85dfd85" name="department-postFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="d713b1ee-bd31-4c3c-86d6-de9b5f3ad8ee" actual="#[payload]" expected="#[readUrl('classpath://departments/afterPost.dwl')]" message='#["payloads do not match"]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="departments-test-suite-department-get-by-id-FlowTest" doc:id="0b6ac589-4923-4b61-a12c-1fe1fdbc59f6" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="4ca864d8-9f78-448a-a243-3456b2367d6f" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ed1e042e-1dce-4128-b57f-7cc80cec53fc" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://departments/queryInDelete.dwl')]" mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="a2a41bd7-6efc-40cf-9c0e-c5b8412b9696" >
				<munit:attributes value='#[{uriParams : {id: "23"}}]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to department-get-by-id-Flow" doc:id="46909bd9-f461-42e0-9174-7931cd15d722" name="department-get-by-id-Flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="418b4ddd-e310-4374-9fd3-2a8d86d1f65a" actual="#[payload]" expected="#[readUrl('classpath://departments/queryInDelete.dwl')]" message='#["payloads do not match"]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="departments-test-suite-department-get-all-details-or-get-by-queryparameterTest" doc:id="704821f7-1778-4bdc-ab3f-d4796e36e8b4" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="b6ac6c8c-ec78-4617-82e2-12bc825c4f77" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c7a09fd5-5a29-4c89-a78c-ac2bba2ba9b8" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://departments/queryInDelete.dwl')]" mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="c85859b3-6dfb-407a-ae9f-d9c8768d896e" >
				<munit:attributes value="#[ { &quot;queryParams&quot;:{&quot;soqlWhereClause&quot;: &quot;employeeId__c='23'&quot;}}]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to department-get-all-details-or-get-by-queryparameter" doc:id="25546d9c-08f2-4a94-a6a3-e91e6af7ab33" name="department-get-all-details-or-get-by-queryparameter"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="35e03e0f-aa90-4e05-931b-80665cd4d309" expected="#[readUrl('classpath://departments/queryInDelete.dwl')]" actual="#[payload]" message='#["payloads do not match"]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="departments-test-suite-department-get-all-details-or-get-by-queryparameterTest1" doc:id="ec6ac010-2435-4e07-99b0-5d373fec3554" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="6d0b463b-3ce8-4046-b57b-a80cdb26c052" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="6f8ad000-b08c-4ad5-9629-5cfadce76c54" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://departments/queryInDelete.dwl')]" mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="3ceb63cf-70a6-464c-80ee-3262272f5c69" />
			<flow-ref doc:name="Flow-ref to department-get-all-details-or-get-by-queryparameter" doc:id="49bbe031-827e-4462-b914-5af11065732a" name="department-get-all-details-or-get-by-queryparameter"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="26e84380-0d4b-45fe-9231-72c47f7ca094" actual="#[payload]" expected="#[readUrl('classpath://departments/queryInDelete.dwl')]" message='#["payloads do not match"]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="departments-test-suite-department-delete-FlowTest" doc:id="62a63102-21a5-4955-9d98-ffd1ef13bbcd" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="3fbbf11f-09c9-4ef5-853c-f88889ff72ed" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="9094f8a1-c54d-4525-89a1-9aff41763ef4" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://departments/queryInDelete.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="a23d1209-5ed8-40bf-8b69-bc866f4a4c13" processor="salesforce:delete">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="bf804bc2-f49e-4142-be1b-6c1e7c220174" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://departments/afterDelete.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="e5d6da07-7026-4970-a1e0-5c6ba3cf299a" >
				<munit:attributes value='#[{uriParams : {id: "23"}}]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to department-delete-Flow" doc:id="dc1c2bf6-cdfc-4cc5-98d3-be58d045d798" name="department-delete-Flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="827c0ce4-94aa-4744-9fb6-a84b2cd7a73a" actual="#[payload]" expected="#[readUrl('classpath://departments/afterDelete.dwl')]" message='#["payloads do not match"]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="departments-test-suite-department-upsert-FlowTest" doc:id="98df9d99-9cb8-4a46-a1f9-fd64029f491a" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="a3744d22-3121-4014-9ab5-acc555d708bf" processor="salesforce:upsert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1e87506d-23a0-4881-893c-4fc7a7db98e5" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://departments/afterPost.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="4d83a926-1313-44d0-9166-fcdafd3434f5" >
				<munit:payload value="#[readUrl('classpath://departments/post-body.dwl')]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to department-upsert-Flow" doc:id="c401acbb-1e1e-455d-b280-10fe203fce84" name="department-upsert-Flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="350c6758-4b27-45b9-a448-0a866c26a0e1" actual="#[payload]" expected="#[readUrl('classpath://departments/afterPost.dwl')]" message='#["payloads do not match"]'/>
		</munit:validation>
	</munit:test>


</mule>
